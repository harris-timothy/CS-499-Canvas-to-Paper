/*
 * This file is generated by jOOQ.
 */
package cs499.data_classes.tables.records;


import cs499.data_classes.tables.QuestionReferences;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QuestionReferencesRecord extends UpdatableRecordImpl<QuestionReferencesRecord> implements Record2<Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>question_references.question_id</code>.
     */
    public void setQuestionId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>question_references.question_id</code>.
     */
    public Integer getQuestionId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>question_references.reference_id</code>.
     */
    public void setReferenceId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>question_references.reference_id</code>.
     */
    public Integer getReferenceId() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Integer, Integer> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return QuestionReferences.QUESTION_REFERENCES.QUESTION_ID;
    }

    @Override
    public Field<Integer> field2() {
        return QuestionReferences.QUESTION_REFERENCES.REFERENCE_ID;
    }

    @Override
    public Integer component1() {
        return getQuestionId();
    }

    @Override
    public Integer component2() {
        return getReferenceId();
    }

    @Override
    public Integer value1() {
        return getQuestionId();
    }

    @Override
    public Integer value2() {
        return getReferenceId();
    }

    @Override
    public QuestionReferencesRecord value1(Integer value) {
        setQuestionId(value);
        return this;
    }

    @Override
    public QuestionReferencesRecord value2(Integer value) {
        setReferenceId(value);
        return this;
    }

    @Override
    public QuestionReferencesRecord values(Integer value1, Integer value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached QuestionReferencesRecord
     */
    public QuestionReferencesRecord() {
        super(QuestionReferences.QUESTION_REFERENCES);
    }

    /**
     * Create a detached, initialised QuestionReferencesRecord
     */
    public QuestionReferencesRecord(Integer questionId, Integer referenceId) {
        super(QuestionReferences.QUESTION_REFERENCES);

        setQuestionId(questionId);
        setReferenceId(referenceId);
    }
}
