/*
 * This file is generated by jOOQ.
 */
package cs499.data_classes.tables.records;


import cs499.data_classes.tables.Question;

import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class QuestionRecord extends UpdatableRecordImpl<QuestionRecord> implements Record8<Integer, String, BigDecimal, String, String, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>question.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>question.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>question.type</code>.
     */
    public void setType(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>question.type</code>.
     */
    public String getType() {
        return (String) get(1);
    }

    /**
     * Setter for <code>question.point_value</code>.
     */
    public void setPointValue(BigDecimal value) {
        set(2, value);
    }

    /**
     * Getter for <code>question.point_value</code>.
     */
    public BigDecimal getPointValue() {
        return (BigDecimal) get(2);
    }

    /**
     * Setter for <code>question.name</code>.
     */
    public void setName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>question.name</code>.
     */
    public String getName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>question.description</code>.
     */
    public void setDescription(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>question.description</code>.
     */
    public String getDescription() {
        return (String) get(4);
    }

    /**
     * Setter for <code>question.correct_answer</code>.
     */
    public void setCorrectAnswer(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>question.correct_answer</code>.
     */
    public String getCorrectAnswer() {
        return (String) get(5);
    }

    /**
     * Setter for <code>question.alternate_answers</code>.
     */
    public void setAlternateAnswers(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>question.alternate_answers</code>.
     */
    public String getAlternateAnswers() {
        return (String) get(6);
    }

    /**
     * Setter for <code>question.canvas_id</code>.
     */
    public void setCanvasId(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>question.canvas_id</code>.
     */
    public String getCanvasId() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Integer, String, BigDecimal, String, String, String, String, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Integer, String, BigDecimal, String, String, String, String, String> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Question.QUESTION.ID;
    }

    @Override
    public Field<String> field2() {
        return Question.QUESTION.TYPE;
    }

    @Override
    public Field<BigDecimal> field3() {
        return Question.QUESTION.POINT_VALUE;
    }

    @Override
    public Field<String> field4() {
        return Question.QUESTION.NAME;
    }

    @Override
    public Field<String> field5() {
        return Question.QUESTION.DESCRIPTION;
    }

    @Override
    public Field<String> field6() {
        return Question.QUESTION.CORRECT_ANSWER;
    }

    @Override
    public Field<String> field7() {
        return Question.QUESTION.ALTERNATE_ANSWERS;
    }

    @Override
    public Field<String> field8() {
        return Question.QUESTION.CANVAS_ID;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getType();
    }

    @Override
    public BigDecimal component3() {
        return getPointValue();
    }

    @Override
    public String component4() {
        return getName();
    }

    @Override
    public String component5() {
        return getDescription();
    }

    @Override
    public String component6() {
        return getCorrectAnswer();
    }

    @Override
    public String component7() {
        return getAlternateAnswers();
    }

    @Override
    public String component8() {
        return getCanvasId();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getType();
    }

    @Override
    public BigDecimal value3() {
        return getPointValue();
    }

    @Override
    public String value4() {
        return getName();
    }

    @Override
    public String value5() {
        return getDescription();
    }

    @Override
    public String value6() {
        return getCorrectAnswer();
    }

    @Override
    public String value7() {
        return getAlternateAnswers();
    }

    @Override
    public String value8() {
        return getCanvasId();
    }

    @Override
    public QuestionRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public QuestionRecord value2(String value) {
        setType(value);
        return this;
    }

    @Override
    public QuestionRecord value3(BigDecimal value) {
        setPointValue(value);
        return this;
    }

    @Override
    public QuestionRecord value4(String value) {
        setName(value);
        return this;
    }

    @Override
    public QuestionRecord value5(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public QuestionRecord value6(String value) {
        setCorrectAnswer(value);
        return this;
    }

    @Override
    public QuestionRecord value7(String value) {
        setAlternateAnswers(value);
        return this;
    }

    @Override
    public QuestionRecord value8(String value) {
        setCanvasId(value);
        return this;
    }

    @Override
    public QuestionRecord values(Integer value1, String value2, BigDecimal value3, String value4, String value5, String value6, String value7, String value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached QuestionRecord
     */
    public QuestionRecord() {
        super(Question.QUESTION);
    }

    /**
     * Create a detached, initialised QuestionRecord
     */
    public QuestionRecord(Integer id, String type, BigDecimal pointValue, String name, String description, String correctAnswer, String alternateAnswers, String canvasId) {
        super(Question.QUESTION);

        setId(id);
        setType(type);
        setPointValue(pointValue);
        setName(name);
        setDescription(description);
        setCorrectAnswer(correctAnswer);
        setAlternateAnswers(alternateAnswers);
        setCanvasId(canvasId);
    }
}
